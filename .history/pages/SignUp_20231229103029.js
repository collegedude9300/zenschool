import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.css'
import Link from 'next/link';
export default function SignUp() {
  const [email, setEmail] = useState("");
  const [name, setName] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  const [address, setAddress] = useState("");
  const [city, setCity] = useState("");
  const [state, setState] = useState("");
  const [zipCode, setZipCode] = useState("");
  const [dateOfBirth, setDateOfBirth] = useState("");

  const stateOptions = [
    { value: "AL", label: "Alabama" },
    { value: "AK", label: "Alaska" },
    // ... rest of the state options
    { value: "WV", label: "West Virginia" },
    { value: "WI", label: "Wisconsin" },
    { value: "WY", label: "Wyoming" },
  ];

  const handleSubmit = (e) => {
    e.preventDefault();
    if (
      validateEmail(email) &&
      validateName(name) &&
      validatePhoneNumber(phoneNumber) &&
      validateAddress(address) &&
      validateCity(city) &&
      validateZipCode(zipCode) &&
      validateDateOfBirth(dateOfBirth)
    ) {
      document.getElementById("signupForm").reset();
      alert("Thank you for signing up!");
    } else if (!validateName(name)) {
      alert("Please enter a valid name");
    } else if (!validateEmail(email)) {
      alert("Please enter a valid email");
    } else if (!validatePhoneNumber(phoneNumber)) {
      alert("Please enter a valid phone number");
    } else if (!validateAddress(address)) {
      alert("Please enter a valid address");
    } else if (!validateCity(city)) {
      alert("Please enter a valid city");
    } else if (!validateZipCode(zipCode)) {
      alert("Please enter a valid zip code");
    } else if (!validateDateOfBirth(dateOfBirth)) {
      alert("Please enter a valid date of birth");
    } else {
      alert("Error");
    }
  };

  const validateEmail = (email) => {
    const re =
      /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-1]\d{1,2}\.[0-1]\d{1,2}\.[0-1]\d{1,2}\.[0-1]\d{1,2}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
  };

  const validateName = (name) => {
    const re = /^[A-Z][a-z]+(\s|,)[A-Z][a-z]{1,19}$/;
    return re.test(String(name));
  };

  const validatePhoneNumber = (phoneNumber) => {
    const re = /^\d{10}$/;
    return re.test(String(phoneNumber));
  };

  const validateAddress = (address) => {
    const re = /^[0-9a-zA-Z\s,.'-]{3,}$/;
    return re.test(String(address));
  };

  const validateCity = (city) => {
    const re = /^[a-zA-Z\s,.'-]{3,}$/;
    return re.test(String(city));
  };

  const validateZipCode = (zipCode) => {
    const re = /^\d{5}$/;
    return re.test(String(zipCode));
  };

  const validateDateOfBirth = (dateOfBirth) => {
    const re = /^([0-9]{4})-([0-9]{2})-([0-9]{2})$/;
    if (re.test(String(dateOfBirth))) {
      const year = dateOfBirth.substring(0, 4);
      const currentYear = new Date().getFullYear();
      if (year > currentYear - 100 && year < currentYear) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Sign Up</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>Sign Up</h1>
        <form id="signupForm" onSubmit={handleSubmit}>
          <div className="form-group">
            <label htmlFor="name">Full Name</label>
            <input
              type="text"
              className="form-control"
              id="name"
              placeholder="Enter full name"
              required
              value={name}
              onChange={(e) => setName(e.target.value)}
            />
          </div>
          <div className="form-group">
            <label htmlFor="email">Email</label>
            <input
              type="email"
              className="form-control"
              id="email"
              placeholder="Enter email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
          </div>
          <div className="form-group">
            <label htmlFor="phoneNumber">Phone Number</label>
            <input
              type="tel"
              className="form-control"
              id="phoneNumber"
              placeholder="Enter phone number"
              required
              value={phoneNumber}
              onChange={(e) => setPhoneNumber(e.target.value)}
            />
          </div>
          <div className="form-group">
            <label htmlFor="address">Address</label>
            <input
              type="text"
              className="form-control"
              id="address"
              placeholder="Enter address"
              required
              value={address}
              onChange={(e) => setAddress(e.target.value)}
            />
          </div>
          <div className="form-group">
            <label htmlFor="city">City</label>
            <input
              type="text"
              className="form-control"
              id="city"
              placeholder="Enter city"
              required
              value={city}
              onChange={(e) => setCity(e.target.value)}
            />
          </div>
          <div className="form-group">
            <label htmlFor="state">State (select below)</label>
            <select
              className="form-control"
              id="state"
              value={state}
              onChange={(e) => setState(e.target.value)}
            >
              {stateOptions.map((option) => (
                <option key={option.value} value={option.value}>
                  {option.label}
                </option>
              ))}
            </select>
          </div>
          <div className="form-group">
            <label htmlFor="zipCode">Zip Code</label>
            <input
              type="text"
              className="form-control"
              id="zipCode"
              placeholder="Enter zip code"
              required
              value={zipCode}
              onChange={(e) => setZipCode(e.target.value)}
            />
          </div>
          <div className="form-group">
            <label htmlFor="dateOfBirth">Date of Birth</label>
            <input
              type="date"
              className="form-control"
              id="dateOfBirth"
              placeholder="Enter date of birth"
              required
              value={dateOfBirth}
              onChange={(e) => setDateOfBirth(e.target.value)}
            />
          </div>
          <button type="submit" className="btn btn-primary">
            Submit
          </button>
        </form>
        <Link href="/" passHref>
          <button className="btn btn-primary">Home</button>
              </Link>
      </main>
    </div>
  );
}
